services:
  chroma:
    image: chromadb/chroma:latest
    container_name: chroma_db_local
    volumes:
      - chroma_data:/chroma/.chroma/index
    environment:
      - IS_PERSISTENT=TRUE
    ports:
      - "8001:8000"

  postgres:
    image: postgres:15
    container_name: postgres_db_local
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: finam_hack_app_local
    command: >
      bash -c "poetry run uvicorn app_analytics.api.fast_api:create_app --host 0.0.0.0 --port 8000 --reload --no-access-log"
    volumes:
      - ./app_analytics:/app_analytics/app_analytics
      - ./alembic:/app/alembic  # Исправьте этот путь
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  redis:
    image: redis:7-alpine
    container_name: redis_local
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: finam_hack_celery_worker_local
    command: >
      bash -c "poetry run celery -A app_parsing.celery_app worker -l INFO"
    volumes:
      - ./app_parsing:/app/app_parsing
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: finam_hack_celery_beat_local
    command: >
      bash -c "poetry run celery -A app_parsing.celery_app beat -l INFO"
    volumes:
      - ./app_parsing:/app/app_parsing
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  chroma_data:
    driver: local
  postgres_data:
    driver: local